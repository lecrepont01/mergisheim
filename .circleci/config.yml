version: 2.1

orbs:
  python: circleci/python@2.1.1
  mergisheim: krepon/mergisheim@0.0.2
  mergifyio: mergifyio/ci-issues@dev:test_version

jobs:
  run_tests:
    executor:
      name: python/default
      tag: 3.12.4
    parameters:
      actor:
        type: string
        default: krepon
#      mergify_ci_issues_token:
#        type: string
#        default: $MERGIFY_CI_ISSUES_TOKEN
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: poetry
      - mergisheim/greet:
          # my personnal test orb
          to: LECREPONT01
      - run:
          name: Echo test some parameters
          environment:
            HEAD_SHA: <<pipeline.git.revision>>
          command: |
            echo "Hello World << parameters.actor >> !" 
            echo "Current Job name: ${CIRCLE_JOB}"
            echo $CIRCLE_JOB
            echo "Head SHA: ${HEAD_SHA}"
            echo "Head SHA from env var: ${CIRCLE_SHA1}"
            echo "Repo name: ${CIRCLE_PROJECT_REPONAME}"
            echo "A secret from my test_context: ${MERGISHEIM_YOLO}"
            echo "Repository URL <<pipeline.trigger_parameters.github_app.repo_url>>"
            echo "TOKEN: ${MERGIFY_CI_ISSUES_TOKEN}"
            echo $MERGIFY_CI_ISSUES_TOKEN
      - run:
          name: Run tests
          command: |
            mkdir test_results
            poetry run pytest -vv --junitxml=test_results/report.xml
      - mergifyio/upload:
#          token: <<pipeline.parameters.MERGIFY_CI_ISSUES_TOKEN>>
          token: $MERGIFY_CI_ISSUES_TOKEN
          repository_url: <<pipeline.trigger_parameters.github_app.repo_url>>
          job_name: $CIRCLE_JOB
#          job_name: <<pipeline.parameters.CIRCLE_JOB>>
          report_paths: test_results/report.xml

      # NOTE: use as a step or in a separate job (share report in workspace in that case)
      # - mergify/ci_issues
      #     path: test_results/report.xml
      #     auth_token: ...

      - persist_to_workspace:
          # test usage of workspace sharing
          root: test_results
          paths:
            - report.xml

      - store_test_results:
          path: test_results

  # A separate job to illustrate the persist workspace usage
#  display_tests_report:
#    docker:
#      - image: alpine:latest
#    steps:
#      - attach_workspace:
#          at: /tmp/workspace
#      - run:
#          name: Display reports
#          command: |
#            echo "Showing test results:\n"
#            cat /tmp/workspace/report.xml


workflows:
  # each workflow has a workspace
  continuous_integration:
    jobs:
      - run_tests:
          actor: lecrepont01
          context:
            - test_context
            - ci_secrets

#      - display_tests_report:
#          requires:
#            - run_tests
